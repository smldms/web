---
console.log("üìå Props re√ßus dans ProjectList :", Astro.props);

// D√©structuration correcte des props
const { projects, category } = Astro.props;

console.log("üìå Category apr√®s destructuration :", category);
console.log("üìå Projects apr√®s destructuration :", projects);

// V√©rification si `category` est bien d√©fini
if (!category) {
  console.error("‚ùå ERREUR : 'category' est undefined dans ProjectList !");
}

// V√©rification si chaque projet a bien un tableau de cat√©gories
const filteredProjects = projects.filter(project => {
  console.log("üîç Projet en cours de v√©rification :", project);

  if (!Array.isArray(project.data.categories)) {
    console.error(`‚ùå ERREUR : Les cat√©gories de '${project.data.title}' ne sont pas un tableau !`, project.data.categories);
    return false;
  }

  return project.data.categories.includes(category);
});

console.log("‚úÖ Projets filtr√©s :", filteredProjects);
---

<section id={category} class="project-section">
  <div class="container">
    <h2 class="section-title glitch" data-text={category.replace('-', ' ')}>
      {category.replace('-', ' ')}
    </h2>
    
    {filteredProjects.length > 0 ? (
      <div class="projects-grid">
        {filteredProjects.map((project) => (
          <a href={`/projects/${project.slug}`} class="project-item-link">
            <div class="project-item" data-categories={project.data.categories?.join(', ') || ''}>
              <div class="project-image-container">
                <img 
                  src={project.data.coverImage} 
                  alt={project.data.title} 
                  class="project-image"
                  loading="lazy"
                />
                <div class="project-overlay">
                  <p class="project-description">{project.data.description}</p>
                </div>
                <div class="glitch-effect"></div>
              </div>
            </div>
          </a>
        ))}
      </div>
    ) : (
      <p class="empty-category">Aucun projet trouv√© dans cette cat√©gorie.</p>
    )}
  </div>
</section>

<style>
  .project-section {
    padding: 4rem 0;
    min-height: auto;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  /* Titre avec effet glitch */
  .section-title {
    font-size: 3rem;
    margin-bottom: 2rem;
    text-transform: capitalize;
    position: relative;
    display: inline-block;
    text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
                -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
                0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    animation: glitch 2s infinite;
  }

  .section-title::before,
  .section-title::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip: rect(0, 0, 0, 0);
  }

  .section-title::before {
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    animation: glitch-1 2s infinite linear alternate-reverse;
  }

  .section-title::after {
    left: -2px;
    text-shadow: 2px 0 #00fff9;
    animation: glitch-2 3s infinite linear alternate-reverse;
  }

  @keyframes glitch {
    0% {
      text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
                  -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
                  0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    14% {
      text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
                  -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
                  0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    }
    15% {
      text-shadow: -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
                  0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
                  -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    49% {
      text-shadow: -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
                  0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
                  -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    50% {
      text-shadow: 0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
                  0.05em 0 0 rgba(0, 255, 0, 0.75),
                  0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    99% {
      text-shadow: 0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
                  0.05em 0 0 rgba(0, 255, 0, 0.75),
                  0 -0.05em 0 rgba(0, 0, 255, 0.75);
    }
    100% {
      text-shadow: -0.025em 0 0 rgba(255, 0, 0, 0.75),
                  -0.025em -0.025em 0 rgba(0, 255, 0, 0.75),
                  -0.025em -0.05em 0 rgba(0, 0, 255, 0.75);
    }
  }

  @keyframes glitch-1 {
    0% {
      clip: rect(20px, 9999px, 15px, 0);
    }
    25% {
      clip: rect(32px, 9999px, 28px, 0);
    }
    50% {
      clip: rect(9px, 9999px, 98px, 0);
    }
    75% {
      clip: rect(24px, 9999px, 11px, 0);
    }
    100% {
      clip: rect(87px, 9999px, 37px, 0);
    }
  }

  @keyframes glitch-2 {
    0% {
      clip: rect(78px, 9999px, 89px, 0);
    }
    25% {
      clip: rect(44px, 9999px, 66px, 0);
    }
    50% {
      clip: rect(23px, 9999px, 27px, 0);
    }
    75% {
      clip: rect(67px, 9999px, 22px, 0);
    }
    100% {
      clip: rect(12px, 9999px, 49px, 0);
    }
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .project-item {
    position: relative;
    overflow: hidden;
    border-radius: 4px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .project-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2), 0 0 15px rgba(74, 108, 247, 0.5);
  }

  .project-image-container {
    position: relative;
    overflow: hidden;
    aspect-ratio: 16/9;
  }

  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease, filter 0.3s ease;
  }

  .project-item:hover .project-image {
    transform: scale(1.05);
    filter: contrast(120%) brightness(110%) saturate(130%);
  }

  .project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 1.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
    text-align: center;
  }

  .project-item:hover .project-overlay {
    opacity: 1;
  }

  .project-description {
    font-size: 0.95rem;
    line-height: 1.5;
    color: #fff;
    margin: 0;
    max-width: 100%;
  }

  /* Effet glitch sur les images au survol */
  .glitch-effect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, rgba(74, 108, 247, 0.2), transparent);
    mix-blend-mode: overlay;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 2;
  }

  .project-item:hover .glitch-effect {
    opacity: 1;
    animation: glitch-animation 0.5s infinite;
  }

  @keyframes glitch-animation {
    0% {
      background-position: 0 0;
      filter: hue-rotate(0deg);
    }
    10% {
      background-position: 5px 0;
    }
    20% {
      background-position: -5px 0;
    }
    30% {
      background-position: 15px 0;
    }
    40% {
      background-position: 5px 0;
    }
    50% {
      background-position: -25px 0;
      filter: hue-rotate(180deg);
    }
    60% {
      background-position: -5px 0;
    }
    70% {
      background-position: 0 -10px;
    }
    80% {
      background-position: -15px 0;
    }
    90% {
      background-position: 10px 0;
    }
    100% {
      background-position: 0 0;
      filter: hue-rotate(360deg);
    }
  }

  .project-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.05) 2px,
      rgba(255, 255, 255, 0.05) 4px
    );
    z-index: 3;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .project-item:hover::before {
    opacity: 1;
    animation: pixelate 0.5s steps(10) infinite;
  }

  @keyframes pixelate {
    0% {
      background-size: 100% 100%;
    }
    25% {
      background-size: 300% 100%;
    }
    50% {
      background-size: 100% 300%;
    }
    75% {
      background-size: 400% 100%;
    }
    100% {
      background-size: 100% 100%;
    }
  }

  .empty-category {
    text-align: center;
    font-style: italic;
    color: #a0a0a0;
    margin: 2rem 0;
  }

  @media (max-width: 768px) {
    .section-title {
      font-size: 2rem;
    }

    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Animation au scroll pour les sections de projets
  document.addEventListener('DOMContentLoaded', () => {
    const projectSections = document.querySelectorAll('.project-section');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const grid = entry.target.querySelector('.projects-grid');
          if (grid) {
            grid.style.animation = 'none';
            void grid.offsetWidth; // Force reflow
            grid.style.animation = 'fadeInUp 0.6s ease forwards';
          }
          
          // D√©caler l'animation pour chaque projet
          const projects = entry.target.querySelectorAll('.project-item');
          projects.forEach((project, index) => {
            project.style.opacity = '0';
            project.style.animation = `fadeInUp 0.6s ease ${index * 0.1}s forwards`;
          });
          
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });
    
    projectSections.forEach(section => {
      observer.observe(section);
    });
  });
</script>